using AutoMapper;
using CodeFirst.Dtos;
using CodeFirst.Models;

namespace CodeFirst.Profiles
{
    public class UserProfile : Profile
    {
        public UserProfile()
        {
            CreateMap<UserToCreateDto, User>()
                .ForMember(dest => dest.Id, opt => opt.Ignore()) // Ignore Id (generated by DB)
                .ForMember(dest => dest.PhoneNumber, opt => opt.Ignore()) // Initially null
                .ForMember(dest => dest.DateTime, opt => opt.MapFrom(_ => DateTime.Now)) // Auto-set current time
                .ForMember(dest => dest.RoleId, opt => opt.Ignore());

            CreateMap<User, UserWithSafeInfoDto>();

            CreateMap<UserToUpdateDto, User>()
            .ForMember(dest => dest.Id, opt => opt.Ignore()) // Ignore Id if it's not to be updated
            .ForMember(dest => dest.PhoneNumber, opt => opt.MapFrom(src => src.PhoneNumber)) // Map phone number
            .ForMember(dest => dest.Name, opt => opt.MapFrom(src => src.Name)) // Map name
            .ForMember(dest => dest.Email, opt => opt.MapFrom(src => src.Email)) // Map email
            .ForMember(dest => dest.DateTime, opt => opt.Ignore()) // DateTime might not be updated, adjust if needed
            .ForMember(dest => dest.RoleId, opt => opt.Ignore()); // RoleId should not change if you don't allow modification

        }
    }
}
